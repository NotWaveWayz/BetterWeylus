;TO DO SOON™
;allow so the user can select a device when a certain device is plugged in (don't run for all devices) (possible)
;make it so there is one run instead of two (above fixes issue?)
;fix incostisitant naming
;fix code style
; add to gui: reconfig maybe, localname, start command, quick minimize, singlewin (multi instance?)
;ListLines Off
#Warn UseUnsetGlobal, Off
#NoEnv
;#NoTrayIcon
#Persistent
#SingleInstance Force
SetBatchLines, -1
CoordMode, ToolTip, Screen
; CoordMode, Mouse, Screen
DetectHiddenWindows, On
SetWorkingDir %A_ScriptDir%
SetTitleMatchMode 2
OnExit("Exit")
OnMessage(0x219, "NotifyChange") 
OnMessage(0x0204, "RButtonDown")

iniFile := "config.ini"
InstalledFileType := A_IsCompiled ? ".exe" : ".ahk"
CurrentVersion := "1.0.0"


FontIcons := FileExist("FontIcons.ttf") ? New CustomFont("FontIcons.ttf") : ""
FontIconValid := (IsObject(FontIcons))

ShareButtonText := (FontIconValid) ? Chr("0xe900") : "📤"
PluginsButtonText := (FontIconValid) ? Chr("0xe901") : "🛠"
SettingsButtonText := (FontIconValid) ? Chr("0xe902") : "⚙"

/*
FontIcons:
	FontIcons := ""
	WinSet, Redraw,, A
Return
*/

GoSub, Read
GoSub, Write

If (CheckUpdateStartup)
	ToolTip % UpdateChecker(CurrentVersion, LatestVersion, DownloadLink, ReleasesLink, "BetterWeylus")
If (CheckWeylusUpdateStartup)
	ToolTip % UpdateChecker(WeylusCurrentVersion, WeylusLatestVersion, WeylusDownloadLink, WeylusReleasesLink, "Weylus")

ToolTip, Setting Global Variables.

Global pBitmap


; Required for TempDownload function.
Global UnzipFolder, ZipDownload

; Required for NotifyChange function.
Global LocalName, AutoLocal

; Required for ConnectedNetworkIPs function.
Global HIPList, IPList

; Required for Update function.
Global RepoName, RepoUser, ScriptName, Path

ToolTip, Loading Weylus.

GoSub, BuildW
GoSub, KillW
GoSub, RunW

neutron := new NeutronWindow()
neutron.Load("gui.html")
neutron.Gui("+LabelNeutron")
neutron.Show()

ToolTip
Return

#Include *i Libraries\BARCODER.ahk ; used for built in qr generation
#Include *i Libraries\Gdip_All.ahk ; used for creating built in qr code image
#Include *i Libraries\Class_CustomFont.ahk ; used for button icons
#Include Libraries\RunCMD.ahk ; simillar to the below, but for its local version grabbing
#Include Libraries\cJSON.ahk ; used for getting the version, not a nonexist ignore bc code would bug otherwise, below related
#Include Libraries\GitHubReleasesAPI.ahk ; simillar to the below, but for its local version grabbing
#Include Libraries\Neutron.ahk ; the web gui, dont want to maintain two different ui's, also the point of bw is to improve the ui, which ahk cant do to well anyway.


Clicked(neutron, event)
{
	; event.target will contain the HTML Element that fired the event.
	; Show a message box with its inner text.
	MsgBox, % "You clicked: " event.target.id
}


SetIcon:
	GoSub, GetData
	If !(WeylusGUI) {
		MsgBox, % "Weylus GUI window unavaliable."
		Return
	} Else If (SetIcon) {
		If (FileExist(WeylusIcon)) {
			hIcon := LoadPicture(WeylusIcon,, IsIconIcon)
			If (IsIconIcon = 1) {
				SendMessage, 0x80, 0, hIcon,, % "ahk_id " WeylusGUI
				SendMessage, 0x80, 1, hIcon,, % "ahk_id " WeylusGUI
			} Else
				MsgBox % "The icon hasnt been set. Try again.`nMake sure its an actual image." (IsIconIcon ? "2 (IMAGE_CURSOR)" : "0 (IMAGE_BITMAP)")
		} Else
			MsgBox, % "The icon file doesn't exist:`n""" WeylusIcon """"
	} Else {
		DllCall("DestroyIcon", "ptr", hIcon)
		SendMessage, 0x80, 0,,, % "ahk_id " WeylusGUI
		SendMessage, 0x80, 1,,, % "ahk_id " WeylusGUI
	}
Return

SelectPath:
	FileSelectFile, Path, S3,, Provide a path to Weylus., Executables (*.exe)
	Path := FileExist(Path) ? Path : PathFallback
	GuiControl,, Path, %Path%
Return

Shortcut:
	GoSub, BuildW
	Counter := 0
	While FileExist(ShortcutName " [" Counter "].lnk")
		Counter++
	FileCreateShortcut, % ComSpec, % ShortcutName (Counter = 0 ? "" : " [" Counter "]") ".lnk",, % StartCommand " """ Path """ " NoPathCommand, % "A standalone shortcut for the program " StrReplace(PathName, ".exe") "`, generated by " ScriptName ".", DDORes.dll,, 29, % (QuickMini ? 7 : "")
Return


CompleteWeylus(neutron, event) {
	event.preventDefault()
	
	formData := neutron.GetFormData(event.target)

	for name, value in formData
		{
		%name% := (value = "yes") ? 1 : (value = "no") ? 0 : value
		event.target.id := value
		}

	GoSub, BuildW
	GoSub, KillW
	GoSub, RunW
	Return
}

ShowMSG:
	GoSub, BuildW
	MsgBox % FullCommand
Return
CopyClipboard:
	GoSub, BuildW
	Clipboard := FullCommand
Return


BuildW:
	GoSub, GetData
	CustomLibJS := NCM && NCMLJS ? NCMLJS : CustomLibJS
	CustomIndexHTML := NCM && NCMIHTML ? NCMIHTML : CustomIndexHTML
	
	Flags .= AutoStart ? " --auto-start" : ""
	Flags .= NoGUI ? " --no-gui" : ""
	Flags .= MediaFoundation ? " --try-MediaFoundation" : ""
	Flags .= NVENC ? " --try-NVENC" : ""

	Options .= AccessCode ? " --access-code " AccessCode : ""
	Options .= (!BindAddress || BindAddress = "0.0.0.0" && HideDefault) ? "" : " --bind-address " BindAddress
	Options .= (!WebPort || WebPort = "1701" && HideDefault) ? "" : " --web-port " WebPort
	Options .= (!WebSocketPort || WebSocketPort = "9001" && HideDefault) ? "" : " --websocket-port " WebSocketPort 

	Custom .= CustomLibJS ? " --custom-lib-js " . StrReplace(CustomLibJS, A_ScriptDir) : ""
	Custom .= CustomIndexHTML ? " --custom-index-html " . StrReplace(CustomIndexHTML, A_ScriptDir) : ""
	Custom .= CustomAccessHTML ? " --custom-access-html " . StrReplace(CustomAccessHTML, A_ScriptDir) : ""
	Custom .= CustomStyleCSS ? " --custom-style-css " . StrReplace(CustomStyleCSS, A_ScriptDir) : ""

	NCMLJS := StrReplace(NCMLJS, A_ScriptDir "\")
	NCMIHTML := StrReplace(NCMIHTML, A_ScriptDir "\")
	Icon := StrReplace(Icon, A_ScriptDir "\")
	
	Extra := Extra ? A_Space Extra : ""

	FullCommand := Path . Flags . Options . Custom . Extra
	NoPathCommand := Flags . Options . Custom . Extra
	
	Flags := "", Options := "", Custom := ""
Return
	
KillW:
	WinKill, ahk_group WeylusCMD
Return

RunW:
	Run, % """" ComSpec """ " StartCommand  " """ Path """ " NoPathCommand,, % (QuickMini ? "Min" : "") (HideCMD ? " Hide" : ""), cmdprompt
	msgbox % """" ComSpec """ " StartCommand  " """ Path """ " NoPathCommand "`,`," (QuickMini ? "Min" : "") (HideCMD ? " Hide" : "")
	GroupAdd, WeylusCMD, % "ahk_pid " cmdprompt
	Sleep 1000
	If !(WinExist("ahk_group WeylusCMD")) {
		msgbox, An unknown error occured (Weylus didn't run?)
		Return
	} Else If !(InStr(NoPathCommand, "--no-gui")) {
		WinWait, % "ahk_exe" PathName,, 4
		WinGet, WeylusGUI, ID
		If (WeylusGUI) {
			GroupAdd, WeylusGUIG, % "ahk_id " WeylusGUI
			If (QuickMini)
				WinMinimize, % "ahk_id " WeylusGUI
			GoSub, SetIcon
		}
	}

	If (FileExist(LocalName) && (LocalRun))
		Run, %LocalName%
Return




GetData:
	Gui, Submit, NoHide

	GuiControlGet, SelectedValue,, ShareIP, Text
	SelectedValue := RegExReplace(SelectedValue, " \(Custom\)$")
Return

SharingUpdate:
	GoSub, GetData
	GuiControl, % "Enable"(WebPort ? 1 : 0), ShareWebPort
	GuiControl, % "Enable"(AccessCode ? 1 : 0), ShareAccessCode
	
	QRCodeGen := SelectedValue ((ShareWebPort && WebPort) ? ":" WebPort : "") ((ShareAccessCode && AccessCode) ? "/?access_code=" AccessCode : "")
	GuiControl,, QRCodePreviewText, % QRCodeGen
Return

HideCMDToggle:
	GoSub, GetData
	If (HideCMD) {
		WinHide, ahk_group WeylusCMD
	} Else If (HideCMD) {
		WinGetActiveTitle, PrevWin
		WinShow, ahk_group WeylusCMD
		WinActivate, ahk_group WeylusCMD ; make optional somewhere
		WinActivate, %PrevWin%
	} Else
		WinShow, ahk_group WeylusCMD
Return



InstallNCM:
    UrlDownloadToFile,%LinkNCMLJS%,%NCMLJS%
    If (ErrorLevel) 
        ExtEL .= "An error occured when trying to download ""lib.js"".`n"
		
    UrlDownloadToFile,%LinkNCMIHTML%,%NCMIHTML%
    If (ErrorLevel) 
        ExtEL .= "An error occured when trying to download ""index.html""."
		
	If (ExtEL)
		MsgBox, % ExtEL
Return


NCMToggle:
	GoSub, GetData
	GuiControl, Disable%NCM%, CustomLibJS
	GuiControl, Disable%NCM%, CustomIndexHTML
	If (NCM) {

	} else {

	}
Return



NotifyChange(wParam, lParam, msg, hwnd) {
	If (AutoLocal)
		Run, %LocalName%
}




AddCustomAddress:
	InputBox, CustomValue, Enter Custom Address, Enter the address you want to use for Weylus. (ex: localhost),,300,150,,, Locale
	If (CustomValue) {
		Control, Add, % StrReplace(CustomValue, "|", "⎪") " (Custom)",, % "ahk_id " HIPList
		GuiControl, ChooseString, ShareIP, % StrReplace(CustomValue, "|", "⎪") " (Custom)"
	}
	GoSub, GetData
Return

RemoveAddress:
	MsgBox 0x40024, Remove Selected?, Are you sure you want to remove "%SelectedValue%"?`nThis cannot be undone., 60
	IfMsgBox Yes
	{
		Control, Delete, % ShareIP,, % "ahk_id " HIPList
		GuiControl, Choose, ShareIP, 1
	}
	GoSub, GetData
Return

AddNetworkAddresses:
	ConnectedNetworkIPs(True)
	GoSub, GetData
Return

ResetAddresses:
	MsgBox 0x40024, Reset to default?, Are you sure you want to reset all addresses to default?`nThis will remove ALL custom addresses., 60
	IfMsgBox Yes
		ConnectedNetworkIPs()
	GoSub, GetData
Return

ConnectedNetworkIPs(Behind := False) {
    SeenIPs := {}
	ControlGet, IPList, List,,, % "ahk_id " HIPList
	
	IPList := StrReplace(StrReplace(IPList, "|", "⎪"), "`n", "|")

    Loop, 4 {
        CurrentIP := StrReplace(A_IPAddress%A_Index%, "|", "⎪")
	
        IPList := RegExReplace(IPList, "(^|\|)" CurrentIP "(\||$)")

        If (CurrentIP && !SeenIPs[CurrentIP])
            IPListTemp .= CurrentIP "|", SeenIPs[CurrentIP] := True
    }

    IPList := Behind ? IPListTemp IPList : IPListTemp
    GuiControl,, ShareIP, % "|" IPList
	GuiControl, Choose, ShareIP, 1
}







GenerateQRCode:
	GoSub, GetData
	GenQRCode(QRCodeGen, QRCodeType, QRCodeECL)
Return

GenQRCode(Input, Type, EC := "") {
	Global
	
	If (Type = "Built-In Generator") {
		MATRIX_TO_PRINT := BARCODER_GENERATE_QR_CODE(Input,, EC)

		If MATRIX_TO_PRINT between 1 and 7
		{
			Msgbox, 0x10, Error, ERROR CODE: %MATRIX_TO_PRINT% `n`nERROR CODE TABLE:`n`n1 - Input message is blank.`n2 - The Choosen Code Mode cannot encode all the characters in the input message.`n3 - Choosen Code Mode does not correspond to one of the currently indexed code modes (Automatic, numeric, alphanumeric or byte).`n4 - The choosen forced QR Matrix version (size) cannot encode the entire input message using the choosen ECL Code_Mode. Try forcing a higher version or choosing automated version selection (parameter value 0).`n5 - The input message is exceeding the QR Code standards maximum length for the choosen ECL and Code Mode.`n6 - Choosen Error Correction Level does not correspond to one of the standard ECLs (L, M, Q and H).`n7 - Forced version does not correspond to one of the QR Code standards versions.
			Return
		}

		pBitmap := Gdip_CreateBitmap((MATRIX_TO_PRINT.MaxIndex() + 8) * 10, (MATRIX_TO_PRINT.MaxIndex() + 8) * 10) ; Adding 8 pixels to the width and height here as a "quiet zone" for the image. This serves to improve the printed code readability. QR Code specs require the quiet zones to surround the whole image and to be at least 4 modules wide (4 on each side = 8 total width added to the image). Don't forget to increase this number accordingly if you plan to change the pixel size of each module.
		G := Gdip_GraphicsFromImage(pBitmap)
		Gdip_SetSmoothingMode(pBitmap, 3)
		pBrush := Gdip_BrushCreateSolid(0xFFFFFFFF)
		Gdip_FillRectangle(G, pBrush, 0, 0, (MATRIX_TO_PRINT.MaxIndex() + 8) * 10, (MATRIX_TO_PRINT.MaxIndex() + 8) * 10) ; Same as above.
		Gdip_DeleteBrush(pBrush)
 
		Loop % MATRIX_TO_PRINT.MaxIndex() ; Acess the Rows of the Matrix
		{
			CURRENT_ROW := A_Index
			Loop % MATRIX_TO_PRINT[1].MaxIndex() ; Access the modules (Columns of the Rows).
			{
				CURRENT_COLUMN := A_Index
				If (MATRIX_TO_PRINT[CURRENT_ROW, A_Index] = 1)
				{
					;Gdip_SetPixel(pBitmap, A_Index + 3, CURRENT_ROW + 3, 0xFF000000) ; Adding 3 to the current column and row to skip the quiet zones.
					Loop 10
					{
						CURRENT_REDIMENSION_ROW := A_Index
						Loop 10
						{
							Gdip_SetPixel(pBitmap, (CURRENT_COLUMN * 10) + 29 + A_Index, (CURRENT_ROW * 10) + 29 + CURRENT_REDIMENSION_ROW, 0xFF000000)
						}
					}
				}
				If (MATRIX_TO_PRINT[CURRENT_ROW, A_Index] = 0) ; White pixels need some more attention too when doing multi pixelwide images.
				{
					Loop 10
					{
						CURRENT_REDIMENSION_ROW := A_Index
						Loop 10
						{
							Gdip_SetPixel(pBitmap, (CURRENT_COLUMN * 10) + 29 + A_Index, (CURRENT_ROW * 10) + 29 + CURRENT_REDIMENSION_ROW, 0xFFFFFFFF)
						}
					}
				}
			}
		}
		
		hBitmap := Gdip_CreateHBITMAPFromBitmap(pBitmap)

		Gdip_SaveBitmapToFile(pBitmap, TempQRImage)

		Gdip_DeleteGraphics(G)
		Gdip_DisposeImage(pBitmap)
		DeleteObject(hBitmap)
	} Else If (Type = "API (Online)")
		UrlDownloadToFile, % "https://quickchart.io/qr?size=1000" (EC ? "&ecLevel=" (EC = 1 ? "L" : EC = 2 ? "M" : EC = 3 ? "Q" : EC = 4 ? "H" : "") : "") "&text=" Input, % TempQRImage
	
	GuiControl,, QRCodeImage, % TempQRImage
}

SafeQRFileSelect(Input) {
	Input := RegExReplace(Input, "[\t\r\n\\\/\`:\`?\`*\`|\`>\`<]")
	Input := (StrLen(Input) > 100 ? SubStr(Input, 1, 100) "-" : Input)
	FileSelectFile, SaveQRCodeFile, S27, % A_WorkingDir "\WeylusQRCode (" Input ") - [" A_Now "].png", Save QR Code, Images (*.png)
	Return SaveQRCodeFile
}

SaveQRCode:
	QRCodeSaveLocation := SafeQRFileSelect(Input)
	If (QRCodeSaveLocation)
		FileCopy, % TempQRImage, % QRCodeSaveLocation, 1
Return

ViewQRCode:
	If FileExist(TempQRImage)
		Run, % TempQRImage
	Else
		MsgBox, Image not found.
Return

QRCodeDetails:
	If FileExist(TempQRImage)
		Run, % "properties " TempQRImage
	Else
		MsgBox, Image not found.
Return







; The built in GuiClose, GuiEscape, and GuiDropFiles event handlers will work
; with Neutron GUIs. Using them is the current best practice for handling these
; types of events. Here, we're using the name NeutronClose because the GUI was
; given a custom label prefix up in the auto-execute section.
NeutronClose:
	ExitApp
Return

Exit() {
	Global
	Gdip_Shutdown(pToken)
	FileDelete, % TempQRImage
	If WinExist(PathName) {
		MsgBox, 36, Close Weylus, Do you want to end the active Weylus server(s)?
		IfMsgBox Yes
			GoSub, KillW
	}
	If FileExist(iniFile) {
		GoSub, Read
		GoSub, Write
	}
	ExitApp
}



Write:
	GoSub, GetData

	IniWrite, %Icon%, %iniFile%, UI, Icon
	IniWrite, %WeylusIcon%, %iniFile%, UI, WeylusIcon

	IniWrite, %ScriptName%, %iniFile%, UI, ScriptName

	IniWrite, %HideDefault%, %iniFile%, Options, HideDefault
	IniWrite, %HideCMD%, %iniFile%, Options, HideCMD
	IniWrite, %QuickMini%, %iniFile%, Options, QuickMini
	IniWrite, %SingleWin%, %iniFile%, Options, SingleWin
	IniWrite, %AutoLocal%, %iniFile%, Options, AutoLocal
	IniWrite, %LocalRun%, %iniFile%, Options, LocalRun
	IniWrite, %RunMsgClip%, %iniFile%, Options, RunMsgClip
	IniWrite, %SetIcon%, %iniFile%, Options, SetIcon
	IniWrite, %StartCommand%, %iniFile%, Options, StartCommand
	IniWrite, %LocalName%, %iniFile%, Options, LocalName
	IniWrite, %ReConfig%, %iniFile%, Options, ReConfig
	IniWrite, %BringOnShow%, %iniFile%, Options, BringOnShow
	


	IniWrite, %WConfig%, %iniFile%, Paths, WConfig
	IniWrite, %AutoWConfig%, %iniFile%, Paths, AutoWConfig
	IniWrite, %Path%, %iniFile%, Paths, Path
	IniWrite, %PathName%, %iniFile%, Paths, PathName

	IniWrite, %RepoFile%, %iniFile%, Online, RepoFile
	IniWrite, %RepoUser%, %iniFile%, Online, RepoUser
	IniWrite, %RepoName%, %iniFile%, Online, RepoName
	IniWrite, %MainHostURL%, %iniFile%, Online, MainHostURL
	IniWrite, %WRepoFile%, %iniFile%, Online, WRepoFile
	IniWrite, %WRepoUser%, %iniFile%, Online, WRepoUser
	IniWrite, %WRepoName%, %iniFile%, Online, WRepoName
	IniWrite, %WMainHostURL%, %iniFile%, Online, WMainHostURL

	IniWrite, %ZipDownload%, %iniFile%, Online, ZipDownload
	IniWrite, %UnzipFolder%, %iniFile%, Online, UnzipFolder

	IniWrite, %AccessCode%, %iniFile%, Weylus, AccessCode
	IniWrite, %BindAddress%, %iniFile%, Weylus, BindAddress
	IniWrite, %WebPort%, %iniFile%, Weylus, WebPort
	IniWrite, %WebSocketPort%, %iniFile%, Weylus, WebSocketPort
	IniWrite, %NVENC%, %iniFile%, Weylus, NVENC
	IniWrite, %MediaFoundation%, %iniFile%, Weylus, MediaFoundation
	IniWrite, %AutoStart%, %iniFile%, Weylus, AutoStart
	IniWrite, %NoGUI%, %iniFile%, Weylus, NoGUI

	IniWrite, %QRCodeGen%, %iniFile%, Sharing, QRCodeGen
	IniWrite, %QRCodeECL%, %iniFile%, Sharing, QRCodeECL

	IniWrite, %NCM%, %iniFile%, NCM, NCM
	IniWrite, %NCMLJS%, %iniFile%, NCM, NCMLJS
	IniWrite, %NCMIHTML%, %iniFile%, NCM, NCMIHTML
	IniWrite, %LinkNCMLJS%, %iniFile%, NCM, LinkNCMLJS
	IniWrite, %LinkNCMIHTML%, %iniFile%, NCM, LinkNCMIHTML
Return


Read:
	PathFallback := "weylus.exe"
	TempQRImage := A_Temp "\BW-QRCode" A_Now ".png"

	IniRead, Icon, %iniFile%, UI, Icon, Icon.ico
	IniRead, WeylusIcon, %iniFile%, UI, WeylusIcon, Icon.ico
	If FileExist(Icon)
		Menu, Tray, Icon, % Icon
	Else
		Menu, Tray, Icon, DDORes.dll, 29
	IniRead, ScriptName, %iniFile%, UI, ScriptName, BetterWeylus

	IniRead, HideDefault, %iniFile%, Options, HideDefault, 1
	IniRead, HideCMD, %iniFile%, Options, HideCMD, 1
	IniRead, QuickMini, %iniFile%, Options, QuickMini, 0
	IniRead, SingleWin, %iniFile%, Options, SingleWin, 1
	IniRead, AutoLocal, %iniFile%, Options, AutoLocal, 0
	IniRead, LocalRun, %iniFile%, Options, LocalRun, 1
	IniRead, RunMsgClip,  %iniFile%, Options, RunMsgClip, 1
	IniRead, SetIcon, %iniFile%, Options, SetIcon, 1
	IniRead, StartCommand, %iniFile%, Options, StartCommand, /c
	IniRead, LocalName, %iniFile%, Options, LocalName, WaveyLocalWeylus.lnk
	IniRead, ShortcutName, %iniFile%, Options, ShortcutName, %ScriptName%
	IniRead, ReConfig, %iniFile%, Options, ReConfig, 2
	IniRead, BringOnShow, %iniFile%, Options, BringOnShow, 1
	
	ConnectedNetworkIPs(True)
	
	IniRead, WConfig, %iniFile%, Paths, WConfig, %A_AppData%\weylus\weylus.toml
	IniRead, AutoWConfig, %iniFile%, Paths, AutoWConfig, %A_AppData%\weylus\autoweylus.ini
	IniRead, Path, %iniFile%, Paths, Path, %PathFallback%
	SplitPath, Path, PathName

	IniRead, PathName, %iniFile%, Paths, PathName, %PathName%

	
	IniRead, RepoFile, %iniFile%, Online, RepoFile, BetterWeylus
	IniRead, RepoUser, %iniFile%, Online, RepoUser, NotWaveWayz
	IniRead, RepoName, %iniFile%, Online, RepoName, BetterWeylus
	IniRead, MainHostURL, %iniFile%, Online, MainHostURL, https://github.com
	IniRead, WRepoFile, %iniFile%, Online, WRepoFile, Windows.zip
	IniRead, WRepoUser, %iniFile%, Online, WRepoUser, H-M-H
	IniRead, WRepoName, %iniFile%, Online, WRepoName, Weylus
	IniRead, WMainHostURL, %iniFile%, Online, WMainHostURL, https://github.com

	IniRead, ZipDownload, %iniFile%, Online, ZipDownload, %A_Temp%\bw-Windows.zip
	IniRead, UnzipFolder, %iniFile%, Online, UnzipFolder, \wd ; removed %A_ScriptDir% from behind this command, may break something?


	If (FileExist(Path))
		WeylusCurrentVersion := LTrim(Trim(RunCMD("""" Path """ -V"), "`n`r "), "weylus ")
	If ((WRepoUser) && (WRepoName)) {
		WeylusLatestVersion := LTrim(GetLatestRelease_Version(WRepoUser, WRepoName), "v")
		WeylusReleasesLink := MainHostURL "/" WRepoUser "/" WRepoName "/releases"
		WeylusDownloadLink := WeylusReleasesLink "/download/v" WeylusLatestVersion "/" WRepoFile
	}
	If ((RepoUser) && (RepoName)) {
		LatestVersion := GetLatestRelease_Version(RepoUser, RepoName)
		ReleasesLink := WMainHostURL "/" RepoUser "/" RepoName "/releases"
		DownloadLink := ReleasesLink "/download/" LatestVersion "/" RepoFile InstalledFileType
	}
	

	IniRead, AccessCode, %iniFile%, Weylus, AccessCode, %A_Space%
	IniRead, BindAddress, %iniFile%, Weylus, BindAddress, 0.0.0.0
	IniRead, WebPort, %iniFile%, Weylus, WebPort, 1701
	IniRead, WebSocketPort, %iniFile%, Weylus, WebSocketPort, 9001
	IniRead, NVENC, %iniFile%, Weylus, NVENC, 0
	IniRead, MediaFoundation, %iniFile%, Weylus, MediaFoundation, 0
	IniRead, AutoStart, %iniFile%, Weylus, AutoStart, 0
	IniRead, NoGUI, %iniFile%, Weylus, NoGUI, 0
	
	
	IniRead, QRCodeGen, %iniFile%, Sharing, QRCodeGen, 0.0.0.0
	IniRead, QRCodeECL, %iniFile%, Sharing, QRCodeECL, 3
	
	
	IniRead, NCM, %iniFile%, NCM, NCM, 1
	IniRead, NCMLJS, %iniFile%, NCM, NCMLJS, other\norinorin\lib.js
	IniRead, NCMIHTML, %iniFile%, NCM, NCMIHTML, other\norinorin\index.html
	IniRead, LinkNCMLJS, %iniFile%, NCM, LinkNCMLJS, https://raw.githubusercontent.com/NotWaveWayz/BetterWeylus/main/other/norinorin/lib.js
	IniRead, LinkNCMIHTML, %iniFile%, NCM, LinkNCMIHTML, https://raw.githubusercontent.com/NotWaveWayz/BetterWeylus/main/other/norinorin/index.html
	
	

	
	If (ReConfig) {
		ReConfig := (ReConfig = 2) ? 0 : ReConfig
		ReadWConfig()
	}

	If (!pToken := Gdip_Startup()) {
		ToolTip, GDI+ Features will be disabled.
		GDIAvaliable := False
		Sleep 2000
	} Else {
		ToolTip, GDI+ Features loaded!
		GDIAvaliable := True
	}
	NCMFound := True
Return

ReadWConfig() {
	Global
	Local TempWConfig
	
	If !(FileExist(WConfig))
		Return
	
	FileDelete, %AutoWConfig%
	FileRead, TempWConfig, %WConfig%
	FileAppend, % "[-]`n" TempWConfig, %AutoWConfig%

	IniRead, AccessCode, %AutoWConfig%, -, access_code, %A_Space%
	IniRead, BindAddress, %AutoWConfig%, -, bind_address, 0.0.0.0
	IniRead, WebPort, %AutoWConfig%, -, web_port, 1701
	IniRead, WebSocketPort, %AutoWConfig%, -, websocket_port, 9001
	IniRead, NVENC, %AutoWConfig%, -, try_NVENC, 0
	IniRead, MediaFoundation, %AutoWConfig%, -, try_MediaFoundation, 0
	IniRead, AutoStart, %AutoWConfig%, -, auto_start, 0
	IniRead, NoGUI, %AutoWConfig%, -, no_gui, 0
	FileDelete, %AutoWConfig%

	AutoStart := (AutoStart = "true" || AutoStart = 1)
	NoGUI := (NoGUI = "true" || NoGUI = 1)
	MediaFoundation := (MediaFoundation = "true" || MediaFoundation = 1)
	NVENC := (NVENC = "true" || NVENC = 1)
}



UpdateChecker(Current, Latest, DLink := "", RLink := "", Name := "") {
	If !(Current) || !(Latest) || (!(Name) && (!(DLink) || !(RLink)))
		Return % "Invalid use.`n`nError Info:`n`nName - " Name "`nCurrent - " CurrentVersion "`nLatest - " LatestVersion "`nDownload Link - " DLink "`nReleases Link - " RLink
	Result := VerCompare(RegExMatch(Current, "-([\w-]+)", M) ? StrReplace(Current, M) : Current, Latest)
	MsgBox % Result " (" Current " " ((Result = 0) ? "=" : (Result > 0) ? ">" : "<") " " Latest ")"
	
	If (Name) {
		If ((Result = -1) || (M && Result = 0)) {
			MsgBox, 0x4, Update Check, % "You're using an older release of " Name ". Would you like to update? (" Current " --> " Latest ")"
			IfMsgBox Yes
				TempDownload(DLink)
		} Else If (Result = 1) {
			MsgBox, 0x4, Update Check, % "You seem to have an (newer?) update of " Name "? (" Current ")`nWould you like to check the releases?"
			IfMsgBox Yes
				Run, % RLink
		} Else If (Result = 0) {
			MsgBox,, Update Check, % Name " is up-to-date. (" Current ")"
		}
	}
	Return Result
}






TempDownload(URL) {
    FileCreateDir, % UnzipFolder
    URLDownloadToFile, % URL, % ZipDownload

    psh := ComObjCreate("Shell.Application")
    psh.Namespace(UnzipFolder).CopyHere(psh.Namespace(ZipDownload).items, 4|16)

    Loop, Files, %UnzipFolder%\*.exe, F
        MsgBox, % A_LoopFileFullPath
}